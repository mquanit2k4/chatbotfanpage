import request from "request";
import dotenv from "dotenv";
const PAGE_ACCESS_TOKEN = process.env.PAGE_ACCESS_TOKEN;
const IMAGE_GET_STARTED = `https://bit.ly/imagestarted`;
const sleep = (ms) => {
  return new Promise((resolve) => setTimeout(resolve, ms));
};
dotenv.config();
let callSendAPI = async (sender_psid, response) => {
  // Construct the message body
  let request_body = {
    recipient: {
      id: sender_psid,
    },
    message: response,
  };

  await sendMarkReadMessage(sender_psid);
  await sendTypingOn(sender_psid);
  // Send the HTTP request to the Messenger Platform
  request(
    {
      uri: "https://graph.facebook.com/v9.0/me/messages",
      qs: { access_token: PAGE_ACCESS_TOKEN },
      method: "POST",
      json: request_body,
    },
    (err, res, body) => {
      if (!err) {
        console.log("message sent!");
      } else {
        console.error("Unable to send message:" + err);
      }
    }
  );
};

let sendTypingOn = (sender_psid) => {
  // Construct the message body
  let request_body = {
    recipient: {
      id: sender_psid,
    },
    sender_action: "typing_on",
  };
  request(
    {
      uri: "https://graph.facebook.com/v9.0/me/messages",
      qs: { access_token: PAGE_ACCESS_TOKEN },
      method: "POST",
      json: request_body,
    },
    (err, res, body) => {
      if (!err) {
        console.log("sendTypingOn sent!");
      } else {
        console.error("Unable to send sendTypingOn:" + err);
      }
    }
  );
};

let sendMarkReadMessage = (sender_psid) => {
  // Construct the message body
  let request_body = {
    recipient: {
      id: sender_psid,
    },
    sender_action: "mark_seen",
  };
  request(
    {
      uri: "https://graph.facebook.com/v9.0/me/messages",
      qs: { access_token: PAGE_ACCESS_TOKEN },
      method: "POST",
      json: request_body,
    },
    (err, res, body) => {
      if (!err) {
        console.log("sendMarkReadMessage sent!");
      } else {
        console.error("Unable to send sendMarkReadMessage:" + err);
      }
    }
  );
};

let getUserName = (sender_psid) => {
  return new Promise((resolve, reject) => {
    // Send the HTTP request to the Messenger Platform
    request(
      {
        uri: `https://graph.facebook.com/${sender_psid}?fields=first_name,last_name,profile_pic&access_token=${PAGE_ACCESS_TOKEN}`,
        method: "GET",
      },
      (err, res, body) => {
        console.log(body);
        if (!err) {
          body = JSON.parse(body);
          let userName = `${body.last_name} ${body.first_name}`;
          resolve(userName);
        } else {
          console.error("Unable to send message:" + err);
          reject(err);
        }
      }
    );
  });
};
let handleGerStarted = (sender_psid) => {
  return new Promise(async (resolve, reject) => {
    try {
      let userName = await getUserName(sender_psid);
      let response1 = {
        text: `Ch√†o ${userName}, em vui l√≤ng nh·∫Øn "casio" ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n chi ti·∫øt v·ªÅ kh√≥a h·ªçc nh√© <3`,
      };

      let response2 = getStartedTemplate();
      // Send text message
      await callSendAPI(sender_psid, response1);
      await sleep(2000);
      // Send template message
      await callSendAPI(sender_psid, response2);
      resolve("done");
    } catch (e) {
      reject(e);
    }
  });
};

let getStartedTemplate = () => {
  let response = {
    attachment: {
      type: "template",
      payload: {
        template_type: "generic",
        elements: [
          {
            title: "KH√ìA H·ªåC CASIO VD-VDC 9+ 2K7",
            subtitle: "D∆∞·ªõi ƒë√¢y l√† 2 kh√≥a h·ªçc CASIO c·ªßa page",
            image_url: IMAGE_GET_STARTED,
            buttons: [
              {
                type: "postback",
                title: "KH√ìA THPTQG 2K7",
                payload: "THPT",
              },
              {
                type: "postback",
                title: "KH√ìA THPTQG + HSA 2K7",
                payload: "HSA",
              },
            ],
          },
        ],
      },
    },
  };
  return response;
};

let handleSendInfoCourseSingle = (sender_psid) => {
  return new Promise(async (resolve, reject) => {
    try {
      let response1 = {
        text: `H·ªçc ph√≠ c·ªßa kh√≥a hi·ªán t·∫°i l√† 200k nh∆∞ng n·∫øu em mu·ªën nh·∫≠n voucher gi·∫£m gi√° ch·ªâ c√≤n 150K th√¨ l√†m theo c√°c b∆∞·ªõc like v√† share trong post n√†y https://www.facebook.com/dobknhe/posts/491015820`,
      };

      let response2 = {
        text: `Khi tham gia kho√° h·ªçc e kh√¥ng ch·ªâ ƒë∆∞·ª£c h·ªçc c√°c ph∆∞∆°ng ph√°p gi·∫£i nhanh + CASIO c√°c d·∫°ng b√†i trong ƒë·ªÅ thi THPTQG m√† c√≤n ƒë∆∞·ª£c √¥n luy·ªán c√°c ƒë·ªÅ thi th·ª≠ c·ªßa Tr∆∞·ªùng, S·ªü qua c√°c bu·ªïi LIVE h·∫±ng tu·∫ßn ƒë·ªÉ ph·ª•c v·ª• cho k√¨ thi THPTQG 2025 lu√¥n nha. Kho√° n√†y k√©o d√†i ƒë·∫øn l√∫c cb thi xong k√¨ thi THPT lu√¥n nh√© ü•∞`,
      };

      let response3 = {
        text: `Ch√†o em, admin xin gi·ªõi thi·ªáu t·ªïng quan v·ªÅ kh√≥a CASIO VD-VDC THPTQG 2K7 ƒë·∫øn em: Kh√≥a h·ªçc s·∫Ω cung c·∫•p cho c√°c b·∫°n t·∫•t c·∫£ c√°c ph∆∞∆°ng ph√°p b·∫•m m√°y + c√°ch t∆∞ duy b·∫£n ch·∫•t ƒë·ªÉ l√†m c√°c d·∫°ng to√°n t·ª´ m·ª©c VD (v·∫≠n d·ª•ng, m·ª©c 8+ THPTQG) ƒë·∫øn VDC (v·∫≠n d·ª•ng cao, m·ª©c 9+ THPTQG) ·ªü t·∫•t c·∫£ c√°c ch∆∞∆°ng trong ch∆∞∆°ng tr√¨nh To√°n 12 (theo chu·∫©n ch∆∞∆°ng tr√¨nh m·ªõi). C√≥ VIDEO + FILE h∆∞·ªõng d·∫´n chi ti·∫øt ph∆∞∆°ng ph√°p v√† b√†i t·∫≠p k√®m theo ƒë·ªÉ c√°c b·∫°n luy·ªán t·∫≠p v√† n·∫Øm v·ªØng ph∆∞∆°ng ph√°p l√†m b√†i. ƒê·ªÉ bi·∫øt th√™m th√¥ng tin em c√≥ th·ªÉ xem ·ªü b√†i vi·∫øt https://www.facebook.com/dobknhe/posts/491015820355603 n√†y nha üíï`,
      };

      let response4 = {
        text: `Song song v·ªõi vi·ªác h·ªçc c√°c ph∆∞∆°ng ph√°p qua VIDEO v√† h·ªçc LIVE h·∫±ng tu·∫ßn trong group k√≠n. C√°c b·∫°n c√≤n ƒë∆∞·ª£c gi·∫£i ƒë√°p th·∫Øc m·∫Øc ƒë·ªëi v·ªõi c√°c b√†i t·∫≠p c√≥ th·ªÉ s·ª≠ d·ª•ng CASIO ƒë∆∞·ª£c th√¥ng qua vi·ªác tham gia box chat c√≥ s·ª± h·ªó tr·ª£ b·ªüi ch√≠nh admin v√† c√°c anh ch·ªã CTV 2k5, 2k6 c√≥ th√†nh t√≠ch xu·∫•t s·∫Øc ‚ú®`,
      };

      let response5 = getInfoCourseTemplateTHPT();
      // Send text message

      await callSendAPI(sender_psid, response3);
      console.log("Sent response1");
      await sleep(2000);
      await callSendAPI(sender_psid, response2);
      console.log("Sent response1");
      await sleep(2000);
      await callSendAPI(sender_psid, response4);
      console.log("Sent response1");
      await sleep(2000);
      await callSendAPI(sender_psid, response1);
      console.log("Sent response1");
      await sleep(2000);
      await callSendAPI(sender_psid, response5);
      resolve("done");
    } catch (e) {
      reject(e);
    }
  });
};

let getInfoCourseTemplateTHPT = () => {
  let response = {
    attachment: {
      type: "template",
      payload: {
        template_type: "button",
        text: "C√≤n ƒë√¢y l√† review v·ªÅ kh√≥a h·ªçc c·ªßa c√°c anh ch·ªã kh√≥a 2K6 nha em: https://docs.google.com/spreadsheets/d/1SWhkhDn_wqQ8BoNxmhSnwXQgiSMprUXcQvVMtfydExY/edit?usp=sharing. Hi·ªán t·∫°i kh√≥a CASIO VD-VDC THPT ƒëang ƒë∆∞·ª£c sale t·ª´ 200k ch·ªâ c√≤n 150k √°p d·ª•ng h·∫øt th√°ng 9 n√†y thui nhaaüí•",
        buttons: [
          {
            type: "postback",
            title: "T∆∞ v·∫•n th√™m gi√∫p em",
            payload: "THPT_DETAIL",
          },
          {
            type: "postback",
            title: "ƒêƒÉng k√Ω lu√¥n üíï",
            payload: "REGISTER_THPT",
          },
          {
            type: "web_url",
            url: "https://bit.ly/thanhtich2k6",
            title: "Th√†nh t√≠ch kh√≥a 2K6",
          },
        ],
      },
    },
  };
  return response;
};

let getHSAInfoImage = () => {
  let response = {
    "attachment":{
      "type":"image", 
      "payload":{
        "url":"https://bit.ly/viewhsa", 
        "is_reusable":true
      }
    }
  };
  return response;
};
let handleSendInfoCourseCombo = (sender_psid) => {
  return new Promise(async (resolve, reject) => {
    try {
      // Send text
      let response1 = {
        text: `Khi tham gia th√™m kh√≥a b·ªï tr·ª£ HSA c√°c em s·∫Ω ƒë∆∞·ª£c h·ªçc th√™m c√°c ph∆∞∆°ng ph√°p CASIO li√™n quan ƒë·∫øn c√°c d·∫°ng to√°n xu·∫•t hi·ªán trong b√†i thi ƒêGNL c·ªßa ƒêHQGHN. Gi√∫p c√°c b·∫°n √¥n t·∫≠p l·∫°i c√°c d·∫°ng to√°n tr·ªçng t√¢m ·ªü l·ªõp 11 v√† c√°c d·∫°ng to√°n m·ªõi ·ªü l·ªõp 12. C√°c ph∆∞∆°ng ph√°p ƒë√£ ƒë∆∞·ª£c admin ch·∫Øt l·ªçc th√†nh c√°c VIDEO h∆∞·ªõng d·∫´n chi ti·∫øt c√πng v·ªõi ƒë√≥ l√† c√°c bu·ªïi LIVE tr∆∞·ªõc c√°c ƒë·ª£t thi ƒë·ªÉ t·ªïng √¥n v√† b·ªï tr·ª£ th√™m cho c√°c b·∫°n n·ªØa nhaaüíï`,
      };

      // Send an iamge
      let response2 = getHSAInfoImage();
      // Send text with button

      let response3 = {
        attachment: {
          type: "template",
          payload: {
            template_type: "button",
            text: "Khi ƒëƒÉng k√Ω combo kh√≥a h·ªçc CASIO VD-VDC THPT + HSA 2K7 ngay trong th√°ng  9 n√†y c√°c b·∫°n s·∫Ω ƒë∆∞·ª£c gi·∫£m gi√° h·ªçc ph√≠ t·ª´ 300k ch·ªâ c√≤n 200k cho c·∫£ 2 kh√≥a h·ªçc n√†y thui nha. H√£y nhanh tay ƒëƒÉng k√Ω ƒë·ªÉ xu·∫•t ph√°t s·ªõm gi√†nh l·ª£i th·∫ø tr∆∞·ªõc c√°c k√¨ thi v√¥ c√πng quan tr·ªçng n√†y nhaaüòç",
            buttons: [
              {
                type: "postback",
                title: "ƒêƒÉng k√Ω kh√≥a THPT",
                payload: "REGISTER_THPT",
              },
              {
                type: "postback",
                title: "ƒêƒÉng k√Ω THPT+HSA",
                payload: "REGISTER_COMBO",
              },
            ],
          },
        },
      };

      await callSendAPI(sender_psid, response1);
      await sleep(2000);

      await callSendAPI(sender_psid, response2);
      await sleep(3000);

      await callSendAPI(sender_psid, response3);

      resolve("done");
    } catch (e) {
      reject(e);
    }
  });
};

let getTHPTInfoImage1 = () => {
  let response = {
    "attachment":{
      "type":"image", 
      "payload":{
        "url":"https://bit.ly/4gkR2sD", 
        "is_reusable":true
      }
    }
  };
  return response;
};

let getTHPTInfoImage2 = () => {
  let response = {
    "attachment":{
      "type":"image", 
      "payload":{
        "url":"https://bit.ly/3B2NRWk", 
        "is_reusable":true
      }
    }
  };
  return response;
};


let handleSendDetailCourse = (sender_psid) => {
  return new Promise(async (resolve, reject) => {
    try {
      // Send text
      let response1 = {
        text: `Khi tham gia kho√° h·ªçc em s·∫Ω ƒë∆∞·ª£c h·ªçc to√†n b·ªô c√°c ph∆∞∆°ng ph√°p CASIO qua video h∆∞·ªõng d·∫´n c√°ch b·∫•m chi ti·∫øt. C√πng v·ªõi ƒë√≥ c√°c e s·∫Ω ƒë∆∞·ª£c h·ªçc live 1 bu·ªïi / tu·∫ßn v√†o 22h t·ªëi th·ª© 6 h·∫±ng tu·∫ßn trong group k√≠n ƒë·ªÉ t·ªïng √¥n c√°c chuy√™n ƒë·ªÅ v√† luy·ªán ƒë·ªÅ thi th·ª≠ c·ªßa c√°c Tr∆∞·ªùng, S·ªü. Khi LIVE ad s·∫Ω ch·ªß y·∫øu t·∫≠p trung gi·∫£i c√°c c√¢u VD-VDC b·∫±ng CASIO (c√≥ k·∫øt h·ª£p c·∫£ t∆∞ duy t·ª± lu·∫≠n) nha.`,
      };

      // Send the image 1
      let response2 = getTHPTInfoImage1();

      // Send the image 2
      let response3 = getTHPTInfoImage2();

      // Send text 
      let response4 = {
        text: `T·∫•t c·∫£ video v√† bu·ªïi live b·ªï tr·ª£ ƒë·ªÅu ƒë∆∞·ª£c record l·∫°i v√† g·∫Øn trong file t·ªïng h·ª£p ƒë·ªÉ c√°c em c√≥ th·ªÉ ti·ªán √¥n t·∫≠p nhaa üí™üèª`,
      };

      // Send text with button
      let response5 = {
        attachment: {
          type: "template",
          payload: {
            template_type: "button",
            text: "Em c√≥ th·ªÉ xem qua th√†nh t√≠ch c·ªßa c√°c anh ch·ªã 2K5 trong k√¨ thi THPTQG nƒÉm 2023 ·ªü link n√†y nhaa: https://web.facebook.com/dobknhe/posts/277507708373083. V√† th√†nh t√≠ch c·ªßa c√°c anh ch·ªã 2K6 th√¨ ·ªü ƒë√¢y nh√©: https://www.facebook.com/dobknhe/posts/pfbid0adhA5sWzDN3KrRfXAJT2gMv5yjTcuKmFZcKFocRurVRaj2LBtzx9XLbxQmYVENctl",
            buttons: [
              {
                type: "postback",
                title: "ƒêƒÉng k√Ω kh√≥a THPT",
                payload: "REGISTER_THPT",
              },
              {
                type: "postback",
                title: "Tham kh·∫£o combo HSA",
                payload: "HSA",
              },
            ],
          },
        },
      };

      await callSendAPI(sender_psid, response1);
      await sleep(2000);

      await callSendAPI(sender_psid, response2);
      await sleep(2000);

      await callSendAPI(sender_psid, response3);
      await sleep(2000);

      await callSendAPI(sender_psid, response4);
      await sleep(2000);

      await callSendAPI(sender_psid, response5);
      
      resolve("done");
    } catch (e) {
      reject(e);
    }
  });
};

let getBankInfoImage = () => {
  let response = {
    "attachment":{
      "type":"image", 
      "payload":{
        "url":"https://bit.ly/3ZjBDCR", 
        "is_reusable":true
      }
    }
  };
  return response;
};

let handleSendRegisterInfoTHPT = (sender_psid) => {
  return new Promise(async (resolve, reject) => {
    try {
      // Send text
      let response1 = {
        text: `Sau khi th·ª±c hi·ªán xong c√°c b∆∞·ªõc nh∆∞ like + share ·ªü post https://www.facebook.com/dobknhe/posts/491015820355603 v√† g·ª≠i ·∫£nh minh ch·ª©ng cho page. ƒê·ªÉ ƒëƒÉng k√Ω kh√≥a CASIO VD-VDC THPT 2K7 em vui l√≤ng chuy·ªÉn kho·∫£n 150k v√†o STK admin ƒë·ªÉ tr√™n m√£ QR n√†y v√† nh·ªõ ƒëi·ªÅn m√£ CODE kh√≥a h·ªçc "LDCK588" ho·∫∑c CODE gi·ªõi thi·ªáu (n·∫øu ƒë∆∞·ª£c CTV gi·ªõi thi·ªáu) v√†o nhaa üòç`,
      };

      // Send an iamge
      let response2 = getBankInfoImage();
      // Send text with button

      let response3 = {
        text: `Sau khi chuy·ªÉn kho·∫£n xong e nh·ªõ g·ª≠i minh ch·ª©ng chuy·ªÉn kho·∫£n (bill) cho page ƒë·ªÉ admin x√°c nh·∫≠n l·∫°i. Sau ƒë√≥ s·∫Ω c√≥ m·ªôt link form g·ª≠i cho e ƒë·ªÉ ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin li√™n h·ªá v√† add em v√†o kh√≥a h·ªçc nh√© üòç`,
      };

      await callSendAPI(sender_psid, response1);
      await sleep(2000);

      await callSendAPI(sender_psid, response2);
      await sleep(3000);

      await callSendAPI(sender_psid, response3);

      resolve("done");
    } catch (e) {
      reject(e);
    }
  });
};

let handleSendRegisterInfoCombo = (sender_psid) => {
  return new Promise(async (resolve, reject) => {
    try {
      // Send text
      let response1 = {
        text: `ƒê·ªÉ ƒëƒÉng k√≠ kh√≥a CASIO VD-VDC THPT+HSA em vui l√≤ng chuy·ªÉn kho·∫£n 200k v√†o STK admin ƒë·ªÉ tr√™n m√£ QR n√†y v√† nh·ªõ ƒëi·ªÅn m√£ CODE kh√≥a h·ªçc "LDCK588" ho·∫∑c CODE gi·ªõi thi·ªáu (n·∫øu ƒë∆∞·ª£c CTV gi·ªõi thi·ªáu) v√†o nhaa üòç`,
      };

      // Send an iamge
      let response2 = getBankInfoImage();
      // Send text with button

      let response3 = {
        text: `Sau khi chuy·ªÉn kho·∫£n xong e nh·ªõ g·ª≠i minh ch·ª©ng chuy·ªÉn kho·∫£n (bill) cho page ƒë·ªÉ admin x√°c nh·∫≠n l·∫°i. Sau ƒë√≥ s·∫Ω c√≥ m·ªôt link form g·ª≠i cho e ƒë·ªÉ ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin li√™n h·ªá v√† add em v√†o kh√≥a h·ªçc nh√© üòç`,
      };

      await callSendAPI(sender_psid, response1);
      await sleep(2000);

      await callSendAPI(sender_psid, response2);
      await sleep(3000);

      await callSendAPI(sender_psid, response3);

      resolve("done");
    } catch (e) {
      reject(e);
    }
  });
};

export default {
  handleGerStarted,
  handleSendInfoCourseSingle,
  handleSendInfoCourseCombo,
  handleSendDetailCourse,
  handleSendRegisterInfoTHPT,
  handleSendRegisterInfoCombo,
};
